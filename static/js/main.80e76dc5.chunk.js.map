{"version":3,"sources":["api/api.ts","redux/auth-reducer.ts","utils/validators.ts","components/Header/Header.module.css","common/form-component/FormControl/FormControl.tsx","common/preloader/Preloader.tsx","components/Login/Login.module.css","common/form-component/FormControl/FormControl.module.css","components/Error404/Error404.module.css","redux/profile-reducer.ts","redux/dialogs-reducer.ts","components/Login/Login.tsx","components/Error404/Error404.tsx","components/Navbar/Navbar.tsx","logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/sidebar-reducer.ts","redux/app-reducer.ts","redux/redux-store.tsx","App.tsx","redux/users-reducer.ts","utils/objects-helper.ts","common/preloader/Preloader.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","index.tsx"],"names":["instance","axios","create","withCredentials","baseURL","headers","profileAPI","getUserProfile","userId","get","then","response","data","getProfileStatus","updateProfileStatus","status","put","usersAPI","getUsers","currentPage","pageSize","followAPI","follow","post","unFollow","delete","authAPI","authMe","login","email","password","rememberMe","logout","ActionsType","initialState","id","isFetching","isAuth","isSummaryError","errorMessage","authReducer","state","action","type","SET_IS_FETCHING","SET_USER_DATA","SET_LOGIN_SUMMARY_ERROR","payload","setUserData","setLoginSummaryError","auth","dispatch","a","resultCode","messages","length","required","value","undefined","maxLength","composeValidators","validators","reduce","error","validator","module","exports","FormControl","props","input","meta","children","useDispatch","useSelector","useEffect","hasError","touched","className","classes","TextInput","rest","Textarea","Preloader","ldsRing","posts","text","likesCount","userProfileData","profileReducer","ADD_POST","newPost","SET_USER_PROFILE","SET_PROFILE_STATUS","addPost","setProfileStatus","getProfile","userData","getStatus","ACTIONS_TYPE","dialogs","name","message","dialogsReducer","SEND_MESSAGE","newMessage","newMessageText","sendMessage","Login","React","memo","onSubmitFormHandler","values","to","PATH","PROFILE","container","onSubmit","subscription","submitting","render","handleSubmit","form","event","component","placeholder","validate","formSummaryError","Error404","s","verticalCenter","Navbar","navbar","navbarItem","activeClassName","active","link","DIALOGS","USERS","href","Header","header","logoBlock","src","logo","alt","loginBlock","onClick","LOGIN","HeaderContainer","this","Component","connector","connect","compose","isInitializedApp","reducers","combineReducers","profilePage","dialogsPage","usersPage","usersReducer","sidebar","app","INITIALIZED_APP","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","DialogsContainer","lazy","ProfileContainer","UsersContainer","PROFILE_USER","ERROR404","NOT_FOUND","App","promise","Promise","all","Suspense","fallback","path","exact","StrictMode","updateObjectInArray","items","objProp","itemId","newObjectProps","map","item","key","obj","users","totalCount","page","followingInProgress","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_TOTAL_COUNT","SET_CURRENT_PAGE","SET_FOLLOWING_IN_PROGRESS","arrayUsersId","filter","usersId","followSuccess","unfollowSuccess","setPage","setIsFetching","setFollowingInProgress","requestUsers","followUnfollowFlow","apiMethod","actionCreator","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.80e76dc5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n   withCredentials: true,\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n   headers: {\n      'API-KEY': '89e8e364-2267-45f8-866b-f315992878e1'\n   }\n});\n\nexport type UserType = {\n   \"name\": string,\n   \"id\": number,\n   \"uniqueUrlName\": string | null,\n   \"photos\": {\n      \"small\": string | null,\n      \"large\": string | null\n   },\n   \"status\": string | null,\n   \"followed\": boolean\n}\n\ntype ResponseGetUsersType = {\n   items: UserType[],\n   totalCount: number,\n   error: string | null\n}\n\ntype ResponseUserProfileType = {\n   \"aboutMe\": string | null\n   \"contacts\": {\n      \"facebook\": string | null\n      \"website\": string | null\n      \"vk\": string | null\n      \"twitter\": string | null\n      \"instagram\": string | null\n      \"youtube\": string | null\n      \"github\": string | null\n      \"mainLink\": string | null\n   },\n   \"lookingForAJob\": boolean,\n   \"lookingForAJobDescription\": string | null\n   \"fullName\": string,\n   \"userId\": number,\n   \"photos\": {\n      \"small\": string | null\n      \"large\": string | null\n   }\n}\n\ntype ResponseBaseType<D= {}> = {\n   \"data\": D,\n   \"messages\": string[],\n   \"fieldsErrors\": string[],\n   \"resultCode\": number\n}\n\n\nexport const profileAPI = {\n   getUserProfile(userId: string) {\n      return instance.get<ResponseUserProfileType>(`profile/${userId}`)\n         .then(response => response.data);\n   },\n   getProfileStatus(userId: string) {\n      return instance.get<string>(`profile/status/${userId}`)\n   },\n   updateProfileStatus(status: string) {\n      return instance.put<ResponseBaseType>(`profile/status`, {status})\n         .then(response => response.data);\n   }\n}\n\nexport const usersAPI = {\n   getUsers(currentPage: number, pageSize: number) {\n      return instance.get<ResponseGetUsersType>(`users?page=${currentPage}&count=${pageSize}`)\n         .then(response => response.data)\n   }\n}\n\nexport const followAPI = {\n   follow(userId: number) {\n      return instance.post<ResponseBaseType>(`follow/${userId}`)\n         .then(response => response.data);\n   },\n   unFollow(userId: number) {\n      return instance.delete<ResponseBaseType>(`follow/${userId}`)\n         .then(response => response.data);\n   }\n}\n\nexport const authAPI = {\n   authMe() {\n      return  instance.get<ResponseBaseType<{\"id\": number, \"login\": string, \"email\": string}>>('auth/me')\n         .then(response => response.data);\n   },\n   login(email: string, password: string, rememberMe: boolean) {\n      return instance.post<ResponseBaseType<{\"userId\": number}>>('auth/login', {email, password, rememberMe})\n          .then(response => response.data);\n   },\n   logout() {\n      return instance.delete<ResponseBaseType>('auth/login')\n          .then(response => response.data);\n   }\n}\n\n","import {authAPI} from '../api/api';\nimport {Dispatch} from \"redux\";\nimport {StateType, AppActionType} from './redux-store';\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\n\nenum ActionsType {\n    SET_IS_FETCHING = 'AUTH/SET_IS_FETCHING',\n    SET_USER_DATA = 'AUTH/SET_USER_DATA',\n    SET_LOGIN_SUMMARY_ERROR = 'AUTH/SET_LOGIN_SUMMARY_ERROR',\n}\n\nexport type InitialAuthStateType = {\n    id: number | null\n    email: string | null\n    login: string | null\n    isFetching: boolean\n    isAuth: boolean\n    isSummaryError: boolean\n    errorMessage: string\n\n}\n\nconst initialState: InitialAuthStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false,\n    isSummaryError: false,\n    errorMessage: ''\n}\n\nexport type ActionsAuthReducersTypes = ReturnType<typeof setIsFetching> | ReturnType<typeof setUserData> |\n    ReturnType<typeof setLoginSummaryError>;\n\n\nexport default function authReducer(state = initialState, action: ActionsAuthReducersTypes): InitialAuthStateType {\n    switch (action.type) {\n        case ActionsType.SET_IS_FETCHING: {\n            return {...state, ...action.payload}\n        }\n        case ActionsType.SET_USER_DATA: {\n            return {...state, ...action.payload}\n        }\n        case ActionsType.SET_LOGIN_SUMMARY_ERROR: {\n            return {...state, ...action.payload}\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n\nexport const setIsFetching = (isFetching: boolean) => ({\n    type: ActionsType.SET_IS_FETCHING,\n    payload: {isFetching}\n}) as const;\n\nexport const setUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n    type: ActionsType.SET_USER_DATA,\n    payload: {id, email, login, isAuth}\n}) as const;\n\nexport const setLoginSummaryError = (isSummaryError: boolean, errorMessage: string) => ({\n    type: ActionsType.SET_LOGIN_SUMMARY_ERROR,\n    payload: {isSummaryError, errorMessage}\n}) as const;\n\n\nexport const auth = () => async (dispatch: Dispatch<ActionsAuthReducersTypes>) => {\n    const data = await authAPI.authMe()\n\n    let {id, email, login} = data.data;\n\n    if (data.resultCode === 0) {\n        dispatch(setUserData(id, email, login, true));\n    }\n}\n\nexport const login = (login: string, password: string, rememberMe: boolean): ThunkAction<void, StateType, unknown, AppActionType> =>\n    async (dispatch: ThunkDispatch<StateType, unknown, AppActionType>) => {\n\n        const data = await authAPI.login(login, password, rememberMe);\n\n        if (data.resultCode === 0) {\n            dispatch(auth());\n        } else {\n            if (data.messages.length > 0) {\n                dispatch(setLoginSummaryError(true, data.messages[0]))\n            }\n        }\n    }\n\nexport const logout = () => async (dispatch: Dispatch) => {\n    const data = await authAPI.logout()\n\n    if (data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false));\n    }\n}","export const required = (value: any) => value ? undefined : 'Required';\n\nexport const maxLength = (maxLength: number) => (value: any) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n\nexport const composeValidators = (...validators: any) => (value: any) =>\n    validators.reduce((error: any, validator: any) => error || validator(value), undefined);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"logoBlock\":\"Header_logoBlock__1MAEm\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import React, {useEffect} from \"react\";\nimport classes from './FormControl.module.css';\n\nimport { FieldRenderProps } from \"react-final-form\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {StateType} from \"../../../redux/redux-store\";\nimport {setLoginSummaryError} from \"../../../redux/auth-reducer\";\n\ntype Props = FieldRenderProps<string, any>;\n\nconst FormControl = (props: Props) => {\n    const {input, meta, children} = props;\n\n    const dispatch = useDispatch();\n\n    const isSummaryError = useSelector<StateType, boolean>(state => state.auth.isSummaryError);\n\n    useEffect(() => {\n        if (isSummaryError && input.value.length) {\n            dispatch(setLoginSummaryError(false, ''));\n        }\n    }, [input.value])\n\n    const hasError = meta.error && meta.touched;\n\n    return (\n        <div className={`${hasError ? classes.error : ''}`}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span className={classes.error}>{meta.error}</span>}\n        </div>\n    );\n}\n\nexport const TextInput: React.FC<Props> = (props: Props) => {\n    const { input, meta, ...rest } = props;\n\n    return (\n        <FormControl {...props}>\n            <input type=\"text\" {...input} {...rest} />\n        </FormControl>\n    );\n};\n\nexport const Textarea: React.FC<Props> = (props: Props) => {\n    const { input, meta, ...rest } = props;\n\n    return (\n        <FormControl {...props}>\n            <textarea {...input} {...rest} />\n        </FormControl>\n    );\n};\n\n","import React from 'react';\nimport classes from './Preloader.module.css';\n\ntype PropsType = {}\n\nexport const Preloader: React.FC<PropsType> = (props) => {\n   return (\n      <>\n         <div className={classes.ldsRing}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n         </div>\n      </>\n   );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1Oz4Y\",\"form\":\"Login_form__2mvFD\",\"formSummaryError\":\"Login_formSummaryError__3cy0x\",\"circle\":\"Login_circle__dFoo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__1aaWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"verticalCenter\":\"Error404_verticalCenter__1rCbI\",\"container\":\"Error404_container__R9zVq\"};","import {profileAPI} from '../api/api';\nimport {Dispatch} from \"redux\";\n\nenum ActionsType {\n    ADD_POST = 'PROFILE/ADD-POST-PROFILE-PAGE',\n    SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE',\n    SET_PROFILE_STATUS = 'PROFILE/SET_PROFILE_STATUS'\n}\n\nexport type PostType = {\n    id: number\n    text: string\n    likesCount: number\n}\ntype PhotosUserType = {\n    small: string | null\n    large: string | null\n}\ntype UserContactsType = {\n    facebook: string | null\n    website: string | null\n    vk: string | null\n    twitter: string | null\n    instagram: string | null\n    youtube: string | null\n    github: string | null\n    mainLink: string | null\n}\nexport type UserProfileType = {\n    aboutMe: string | null,\n    contacts: UserContactsType\n    lookingForAJob: boolean\n    lookingForAJobDescription: string | null\n    fullName: string | null\n    userId: number\n    photos: PhotosUserType\n}\n\nexport type ProfileReducerInitialStateType = {\n    posts: Array<PostType>\n    userProfileData: UserProfileType | null\n    status: null | string\n}\n\nexport const initialState: ProfileReducerInitialStateType = {\n    posts: [\n        {id: 1, text: 'I love Ukraine.', likesCount: 10},\n        {id: 2, text: 'Lorem ipsum is big dog cat dolor sit.', likesCount: 3},\n    ],\n    userProfileData: null,\n    status: null\n}\n\nexport type ActionsProfileType = ReturnType<typeof addPost> |\n    ReturnType<typeof setUserProfileData> | ReturnType<typeof setProfileStatus>;\n\n\nexport default function profileReducer(state: ProfileReducerInitialStateType = initialState, action: ActionsProfileType): ProfileReducerInitialStateType {\n    switch (action.type) {\n        case ActionsType.ADD_POST: {\n            const newPost = {id: 3, likesCount: 4, ...action.payload};\n\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        }\n        case ActionsType.SET_USER_PROFILE: {\n            return {...state, userProfileData: action.payload}\n        }\n        case ActionsType.SET_PROFILE_STATUS: {\n            return {...state, ...action.payload}\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n\nexport const addPost = (text: string) => ({type: ActionsType.ADD_POST, payload: {text}}) as const\n\nexport const setUserProfileData = (userData: UserProfileType) =>\n    ({type: ActionsType.SET_USER_PROFILE, payload: {...userData}}) as const\n\nexport const setProfileStatus = (status: string) =>\n    ({type: ActionsType.SET_PROFILE_STATUS, payload: {status}}) as const\n\n\nexport const getProfile = (userId: string) => async (dispatch: Dispatch<ActionsProfileType>) => {\n    const data = await profileAPI.getUserProfile(userId);\n\n    dispatch(setUserProfileData(data));\n}\n\nexport const getStatus = (userId: string) => async (dispatch: Dispatch<ActionsProfileType>) => {\n    const data = await profileAPI.getProfileStatus(userId);\n\n    dispatch(setProfileStatus(data.data));\n}\n\nexport const updateProfileStatus = (status: string) => async (dispatch: Dispatch<ActionsProfileType>) => {\n    const data = await profileAPI.updateProfileStatus(status)\n\n    if (data.resultCode === 0) {\n        dispatch(setProfileStatus(status));\n    }\n}\n","import {DialogType, MessageType} from '../components/Dialogs/Dialogs';\n\nenum  ACTIONS_TYPE {\n   SEND_MESSAGE = 'SEND-MESSAGE-DIALOGS-PAGE',\n}\n\ntype InitialStateType = {\n   dialogs: Array<DialogType>\n   messages: Array<MessageType>\n}\n\nexport type ActionsDialogsType = ReturnType<typeof sendMessage>;\n\n\nconst initialState: InitialStateType = {\n   dialogs: [\n      {id: 1, name: 'Andriy'},\n      {id: 2, name: 'Serhiy'},\n      {id: 3, name: 'Oleg'},\n      {id: 4, name: 'Lesya'},\n      {id: 5, name: 'Ira'},\n   ],\n   messages: [\n      {id: 1, message: 'Lorem ipsum dolor sit.'},\n      {id: 2, message: 'Lorem ipsum is big dog cat dolor sit.'},\n      {id: 3, message: 'Lorem ipsum mouse cat house dolor sit.'},\n   ],\n}\n\nexport default function dialogsReducer(state: InitialStateType = initialState, action: ActionsDialogsType) {\n   switch (action.type) {\n      case ACTIONS_TYPE.SEND_MESSAGE: {\n         const newMessage = {id: 4, ...action.payload};\n\n         return {\n            ...state,\n            messages: [...state.messages, newMessage],\n            newMessageText: '',\n         };\n      }\n      default: {\n         return state;\n      }\n   }\n}\n\n\nexport const sendMessage = (message: string) => ({type: ACTIONS_TYPE.SEND_MESSAGE, payload: {message}}) as const","import React from 'react';\nimport classes from './Login.module.css';\nimport {Field, Form} from 'react-final-form';\nimport {composeValidators, maxLength, required} from \"../../utils/validators\";\nimport {TextInput} from \"../../common/form-component/FormControl/FormControl\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../../App\";\n\ntype PropsType = {}\n\ntype FormDataType = {\n    email: string,\n    password: string,\n    rememberMe: boolean\n}\n\n\nexport const Login: React.FC<PropsType> = React.memo((props) => {\n    const dispatch = useDispatch();\n    const isAuth = useSelector<StateType, boolean>(state => state.auth.isAuth);\n    const isSummaryError = useSelector<StateType, boolean>(state => state.auth.isSummaryError);\n    const errorMessage = useSelector<StateType, string>(state => state.auth.errorMessage);\n\n    const onSubmitFormHandler = async (values: FormDataType) => {\n        dispatch(login(values.email, values.password, values.rememberMe));\n    }\n\n    if (isAuth) {\n        return <Redirect to={PATH.PROFILE}/>\n    }\n\n    return (\n        <div className={classes.container}>\n            <h3>Login Form</h3>\n\n            <Form\n                onSubmit={onSubmitFormHandler}\n                subscription={{\n                    submitting: true\n                }}\n                render={(props) => {\n                    const {handleSubmit, submitting, form} = props;\n\n                    return (\n                        <form onSubmit={ async (event) => {\n                            await handleSubmit(event);\n                            //form.reset();\n                        }}>\n                            <Field name='email'\n                                   component={TextInput}\n                                   placeholder='email'\n                                   validate={required}\n                                   subscription={{\n                                       value: true,\n                                       error: true,\n                                       touched: true\n                                   }}\n\n                            />\n                            <Field name='password'\n                                   type='password'\n                                   component={TextInput}\n                                   placeholder='password'\n                                   validate={composeValidators(maxLength(12), required )}\n                                   subscription={{\n                                       value: true,\n                                       error: true,\n                                       touched: true\n                                   }}\n                            />\n                            <div>\n                                <Field name='rememberMe'\n                                       type='checkbox'\n                                       component='input'\n                                /> Remember me\n                            </div>\n                            {isSummaryError && <div className={classes.formSummaryError}>{errorMessage}</div>}\n                            <button type=\"submit\">submit</button>\n                        </form>\n                    )\n                }}\n            />\n        </div>\n    );\n});\n\n\n\n\n\n\n","import React from \"react\";\nimport s from './Error404.module.css';\nimport { Link } from \"react-router-dom\";\nimport {PATH} from \"../../App\";\n\nfunction Error404() {\n   return (\n      <div className={s.verticalCenter}>\n         <div className={s.container}>\n            <h1>😮</h1>\n            <h2>Oops! Page Not Be Found</h2>\n            <p>Sorry but the page you are looking for does not exist.</p>\n            <Link to={PATH.PROFILE}>Back to homepage</Link>\n         </div>\n      </div>\n   );\n}\n\nexport default React.memo(Error404);","import React from 'react';\nimport classes from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\nimport {PATH} from '../../App';\n\nexport const Navbar = () => {\n    return (\n        <nav className={classes.navbar}>\n            <div className={classes.navbarItem}>\n               <NavLink to={PATH.PROFILE}\n                        activeClassName={classes.active}\n                        className={classes.link}>\n                  Profile\n               </NavLink>\n            </div>\n            <div className={classes.navbarItem}>\n               <NavLink to={PATH.DIALOGS}\n                        activeClassName={classes.active}\n                        className={classes.link}>\n                  Messages\n               </NavLink>\n            </div>\n           <div className={classes.navbarItem}>\n              <NavLink to={PATH.USERS}\n                       activeClassName={classes.active}\n                       className={classes.link}>\n                 Users\n              </NavLink>\n           </div>\n            <div className={classes.navbarItem}>\n                <a href=\"#\" className={classes.link}>News</a>\n            </div>\n            <div className={classes.navbarItem}>\n                <a href=\"#\" className={classes.link}>Music</a>\n            </div>\n        </nav>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport logo from './../../logo.svg'\nimport classes from './Header.module.css';\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {PATH} from '../../App';\nimport {useDispatch} from \"react-redux\";\n\ntype PropsType = {\n    login: string | null\n    isAuth: boolean\n    logout: () => void\n}\n\n\nexport const Header: React.FC<PropsType> = (props) => {\n    const {isAuth, login, logout} = props;\n\n    const dispatch = useDispatch();\n\n    return (\n        <header className={classes.header}>\n            <div className={classes.logoBlock}>\n                <img src={logo}\n                     alt=\"logo\"/>\n            </div>\n\n            <div className={classes.loginBlock}>\n                {isAuth ? <>{login} / <span onClick={logout}>logout</span></> :\n                    <NavLink to={PATH.LOGIN}>login</NavLink>}\n            </div>\n        </header>\n    );\n}\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {StateType} from '../../redux/redux-store';\nimport {Header} from './Header';\nimport {auth, logout, setUserData} from '../../redux/auth-reducer';\nimport {compose} from 'redux';\n\nclass HeaderContainer extends React.Component<TProps> {\n   constructor(props: TProps) {\n      super(props);\n   }\n\n   render() {\n      return <Header {...this.props}  />\n   }\n}\n\ntype MapStateType = {\n   isAuth: boolean\n   login: string | null\n}\n\nconst mapStateToProps = (state: StateType): MapStateType => ({\n   login: state.auth.login,\n   isAuth: state.auth.isAuth\n});\n\nconst connector = connect(mapStateToProps, {auth, logout});\n\ntype TProps = ConnectedProps<typeof connector>;\n\nexport default compose<React.ComponentType>(\n    connector\n)(HeaderContainer);\n\n\n\n","\nconst initialState = {}\n\nexport function sidebarReducer(state: any = initialState, action: any) {\n   switch (action.type) {\n      default: {\n         return state;\n      }\n   }\n}","import {AppActionType, StateType} from './redux-store';\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\nimport {auth} from \"./auth-reducer\";\n\nenum ActionsType {\n    INITIALIZED_APP = 'APP/INITIALIZED_APP',\n}\n\nexport type AppInitialStateType = {\n    isInitializedApp: boolean\n}\n\nconst initialState: AppInitialStateType = {\n    isInitializedApp: false\n}\n\nexport type ActionsAppReducersTypes = ReturnType<typeof initializedSuccess>;\n\n\nexport default function appReducer(state = initialState, action: ActionsAppReducersTypes): AppInitialStateType {\n    switch (action.type) {\n        case ActionsType.INITIALIZED_APP: {\n            return {...state, isInitializedApp: true}\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n\nconst initializedSuccess = () => ({\n    type: ActionsType.INITIALIZED_APP\n}) as const;\n\n\nexport const initialize = (): ThunkAction<void, StateType, unknown, AppActionType> =>\n    async (dispatch: ThunkDispatch<StateType, unknown, AppActionType>) => {\n        const promise = dispatch(auth());\n\n        await Promise.all([promise]);\n\n        dispatch(initializedSuccess())\n    }","import dialogsReducer, {ActionsDialogsType} from './dialogs-reducer';\nimport profileReducer, {ActionsProfileType} from './profile-reducer';\nimport {sidebarReducer} from './sidebar-reducer';\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux'\nimport thunk from 'redux-thunk';\nimport {ActionsUsersReducersTypes, usersReducer} from './users-reducer';\nimport authReducer, {ActionsAuthReducersTypes} from './auth-reducer';\nimport appReducer, {ActionsAppReducersTypes} from \"./app-reducer\";\n\nlet reducers = combineReducers({\n   profilePage: profileReducer,\n   dialogsPage: dialogsReducer,\n   usersPage: usersReducer,\n   sidebar: sidebarReducer,\n   auth: authReducer,\n   app: appReducer,\n});\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\n// @ts-ignore\nwindow.store = store;\n\nexport type StateType = ReturnType<typeof reducers>\n\nexport type AppActionType = ActionsAuthReducersTypes  | ActionsUsersReducersTypes | ActionsDialogsType |\n    ActionsProfileType | ActionsAppReducersTypes;\n\n\n","import React, {useEffect} from 'react';\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Login} from './components/Login/Login';\nimport Error404 from './components/Error404/Error404';\nimport {Navbar} from './components/Navbar/Navbar';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport {Provider, useDispatch, useSelector} from \"react-redux\";\nimport {StateType, store} from \"./redux/redux-store\";\nimport {Preloader} from \"./common/preloader/Preloader\";\nimport {initialize} from \"./redux/app-reducer\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\ntype AppType = {}\n\nexport const PATH = {\n    PROFILE: '/profile',\n    PROFILE_USER: '/profile/:userId?',\n    DIALOGS: '/dialogs',\n    USERS: '/users',\n    LOGIN: '/login',\n    ERROR404: '/404',\n    NOT_FOUND: '*'\n}\n\nfunction App(props: AppType) {\n    const dispatch = useDispatch();\n\n    const isInitializedApp = useSelector<StateType, boolean>(state => state.app.isInitializedApp);\n\n    useEffect(() => {\n        dispatch(initialize());\n    }, [])\n\n    if (!isInitializedApp) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className='appWrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='appWrapperContent'>\n                <Switch>\n                    <React.Suspense fallback={<Preloader/>}>\n                        <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                        <Route path={PATH.PROFILE_USER} render={() => <ProfileContainer/>}/>\n\n                        <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\n\n                        <Route path={PATH.DIALOGS} render={() => <DialogsContainer/>}/>\n\n                        <Route path={PATH.USERS} render={() => <UsersContainer/>}/>\n\n                        <Route path={PATH.LOGIN} render={() => <Login/>}/>\n\n                        <Route path={PATH.ERROR404} render={() => <Error404/>}/>\n\n                        <Route path={PATH.NOT_FOUND} render={() => <Redirect to={PATH.ERROR404}/>}/>\n                    </React.Suspense>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\n\nexport default () => {\n    return (\n        <React.StrictMode>\n            <HashRouter>\n                <Provider store={store}>\n                    <App/>\n                </Provider>\n            </HashRouter>\n        </React.StrictMode>\n    )\n};\n","import {followAPI, usersAPI, UserType} from '../api/api';\nimport {Dispatch} from 'react';\nimport {updateObjectInArray} from \"../utils/objects-helper\";\n\nenum ACTIONS_TYPE {\n    FOLLOW = 'FOLLOW-USERS-REDUCER',\n    UNFOLLOW = 'UNFOLLOW-USERS-REDUCER',\n    SET_USERS = 'SET-USERS-USERS-REDUCER',\n    SET_TOTAL_COUNT = 'SET_TOTAL_COUNT_USERS_REDUCER',\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE_USERS_REDUCER',\n    SET_IS_FETCHING = 'USERS/SET_SET_IS_FETCHING',\n    SET_FOLLOWING_IN_PROGRESS = 'USERS/SET_FOLLOWING_IN_PROGRESS',\n}\n\nexport type UsersInitialStateType = {\n    users: Array<UserType>\n    totalCount: number\n    pageSize: number\n    page: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\nexport type ActionsUsersReducersTypes =\n    ReturnType<typeof followSuccess> | ReturnType<typeof unfollowSuccess> | ReturnType<typeof setUsers> |\n    ReturnType<typeof setTotalCount> | ReturnType<typeof setPage> | ReturnType<typeof setIsFetching> |\n    ReturnType<typeof setFollowingInProgress>;\n\nconst initialState: UsersInitialStateType = {\n    users: [],\n    totalCount: 0,\n    pageSize: 5,\n    page: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\n\nexport const usersReducer = (state = initialState, action: ActionsUsersReducersTypes): UsersInitialStateType => {\n    switch (action.type) {\n        case ACTIONS_TYPE.FOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, 'id', action.userId, {followed: true})\n            }\n        }\n        case ACTIONS_TYPE.UNFOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, 'id', action.userId, {followed: false})\n            }\n        }\n        case ACTIONS_TYPE.SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\n            return {...state, ...action.payload}\n        }\n        case ACTIONS_TYPE.SET_CURRENT_PAGE: {\n            return {...state, ...action.payload}\n        }\n        case ACTIONS_TYPE.SET_IS_FETCHING: {\n            return {...state, ...action.payload}\n        }\n        case ACTIONS_TYPE.SET_FOLLOWING_IN_PROGRESS: {\n            let id = action.payload.id;\n            let arrayUsersId = state.followingInProgress;\n\n            return {\n                ...state,\n                followingInProgress: action.payload.isFetching ?\n                    [...arrayUsersId, id] :\n                    arrayUsersId.filter(usersId => usersId !== id)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n\nexport const followSuccess = (userId: number) => ({type: ACTIONS_TYPE.FOLLOW, userId}) as const;\n\nexport const unfollowSuccess = (userId: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userId}) as const;\n\nexport const setUsers = (users: Array<UserType>) => ({type: ACTIONS_TYPE.SET_USERS, users}) as const;\n\nexport const setTotalCount = (totalCount: number) => ({\n    type: ACTIONS_TYPE.SET_TOTAL_COUNT,\n    payload: {totalCount}\n}) as const;\n\nexport const setPage = (page: number) => ({\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\n    payload: {page}\n}) as const;\n\nexport const setIsFetching = (isFetching: boolean) => ({\n    type: ACTIONS_TYPE.SET_IS_FETCHING,\n    payload: {isFetching}\n}) as const;\n\nexport const setFollowingInProgress = (isFetching: boolean, id: number) =>\n    ({type: ACTIONS_TYPE.SET_FOLLOWING_IN_PROGRESS, payload: {id, isFetching}}) as const;\n\n\nexport const requestUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch<ActionsUsersReducersTypes>) => {\n    dispatch(setIsFetching(true));\n\n    const data = await usersAPI.getUsers(currentPage, pageSize);\n\n    dispatch(setUsers(data.items));\n    dispatch(setTotalCount(data.totalCount));\n    dispatch(setIsFetching(false));\n\n}\n\nconst followUnfollowFlow =  async (\n    dispatch: Dispatch<ActionsUsersReducersTypes>,\n    apiMethod: any,\n    actionCreator: any,\n    userId: number\n) => {\n    dispatch(setFollowingInProgress(true, userId));\n\n    const data = await apiMethod;\n\n    if (data.resultCode === 0) {\n        dispatch(actionCreator);\n\n        dispatch(setFollowingInProgress(false, userId));\n    }\n}\n\nexport const follow = (userId: number) => async (dispatch: Dispatch<ActionsUsersReducersTypes>) => {\n    followUnfollowFlow(dispatch, followAPI.follow(userId), followSuccess(userId), userId);\n}\n\nexport const unFollow = (userId: number) => async (dispatch: Dispatch<ActionsUsersReducersTypes>) => {\n    followUnfollowFlow(dispatch, followAPI.unFollow(userId), unfollowSuccess(userId), userId);\n}\n","import {UserType} from \"../api/api\";\n\nconst getKeyValue = <T extends object, U extends keyof T>(key: U) => (obj: T) =>\n    obj[key];\n\ntype ObjectType = UserType;\n\ntype ObjPropType = keyof ObjectType;\n\nexport const updateObjectInArray = (items: ObjectType[], objProp: ObjPropType, itemId: any, newObjectProps: Object) => {\n    return items.map(item => {\n            const value = getKeyValue<ObjectType, keyof ObjectType>(objProp)(item);\n\n            return value === itemId ?\n                {...item, ...newObjectProps} :\n                item\n        }\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Preloader_ldsRing__2l6ec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"navbarItem\":\"Navbar_navbarItem__1xOtf\",\"link\":\"Navbar_link__TNvz9\",\"active\":\"Navbar_active__3mbhk\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}